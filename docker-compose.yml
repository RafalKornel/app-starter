services:
  postgres:
    image: postgres:latest
    container_name: ${DB_HOST}
    env_file:
      - .env.postgres
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init-user-db.sh

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      target: ${BUILD_TARGET}
    container_name: api
    environment:
      PORT: ${API_PORT}
      NODE_ENV: ${MODE}
    env_file:
      - .env.postgres
      - .env.api
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./api:/app
      - /app/node_modules # TODO: change to anonymous volume when doing prod
    depends_on:
      - postgres

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${BUILD_TARGET}
    environment:
      PORT: ${CLIENT_PORT}
      NODE_ENV: ${MODE}
      VITE_APP_API_HOST: localhost
      VITE_APP_API_PORT: ${API_PORT}
    volumes:
      - ./client:/app
      - /app/node_modules # TODO: change to anonymous volume when doing prod
    depends_on:
      - api
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"


volumes:
  postgres_data: # Define a named volume for data persistence

